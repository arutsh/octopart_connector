directive @HasPlanTier(tier: PlanTier!) on FIELD_DEFINITION
directive @BlockAll(roles: [Role!]!) on FIELD_DEFINITION
directive @RequireAny(roles: [Role!]!) on FIELD_DEFINITION
directive @specifiedBy(url: String!) on SCALAR
input ApiCredentials {
  api_name: String!
  client_id: String
  client_secret: String
  username: String
  password: String
}

type AppliedFilter {
  shortname: String!
  name: String!
  values: [String!]!
  display_values: [String!]!
}

type Attribute {
  id: ID!
  name: String!
  shortname: String!
  group: String!
}

type AttributeGroup {
  name: String!
  attributes: [Attribute!]!
}

type Blurb {
  name: String!
  path_name: String!
  description: String!
  content: String!
}

type CadBucket {
  cad_state: String!
  count: Int
}

type Category {
  id: ID!
  parent_id: ID!
  name: String!
  ancestors: [Category!]!
  children: [Category!]!
  path: String!
  relevant_attributes: [Attribute!]!
  blurb: Blurb
  num_parts: Int!
}

type CategoryBucket {
  category: Category!
  count: Int
}

type Company {
  id: ID!
  name: String!
  aliases: [String!]!
  display_flag: String
  homepage_url: String
  slug: String!
  is_verified: Boolean!
  is_broker: Boolean! @deprecated(reason: "use `PartSeller.is_broker` instead")
  is_distributorapi: Boolean!
}

type CompanyBucket {
  company: Company!
  count: Int
}

type Country {
  name: String!
  country_code: String!
  continent_code: String!
}

type Description {
  text: String!
  credit_string: String!
  credit_url: String!
}

type Document {
  name: String!
  page_count: Int
  created_at: Time
  url: String!
  credit_string: String!
  credit_url: String!
  mime_type: String!
}

type DocumentCollection {
  name: String!
  documents: [Document!]!
}

type Image {
  url_largest: String! @deprecated(reason: "use `url` instead")
  url_55px: String! @deprecated(reason: "use `url` instead")
  url_75px: String! @deprecated(reason: "use `url` instead")
  url_90px: String! @deprecated(reason: "use `url` instead")
  url: String!
  credit_string: String!
  credit_url: String!
}

scalar Map

type Offer {
  _cache_id: String!
  id: ID!
  sku: String!
  eligible_region: String
  inventory_level: Int!
  packaging: String
  moq: Int
  prices: [PricePoint!]!
  click_url: String!
  internal_url: String!
  updated: Time!
  factory_lead_days: Int
  on_order_quantity: Int
  factory_pack_quantity: Int
  order_multiple: Int
  multipack_quantity: Int
  is_custom_pricing: Boolean!
}

type Part {
  _cache_id: String!
  id: ID!
  name: String!
  mpn: String!
  generic_mpn: String!
  manufacturer: Company!
  manufacturer_url: String
  free_sample_url: String
  document_collections: [DocumentCollection!]!
  short_description: String!
  descriptions: [Description!]!
  images: [Image!]!
  specs: [Spec!]!
  slug: String!
  octopart_url: String!
  similar_parts: [Part!]!
  companion_products: [SponsoredPart!]!
  category: Category
  series: PartSeries
  best_image: Image
  best_datasheet: Document
  reference_designs: [ReferenceDesign!]!
  cad: PartCad
  cad_request_url: String
  v3uid: ID!
  counts: Map!
  median_price_1000: PricePoint
  total_avail: Int!
  avg_avail: Float!
  sellers(
    include_brokers: Boolean! = false
    authorized_only: Boolean! = false
  ): [PartSeller!]!
  estimated_factory_lead_days: Int
  aka_mpns: [String!]!
}

type PartCad {
  add_to_library_url: String
  has_3d_model: Boolean!
  has_altium: Boolean!
  has_eagle: Boolean!
  has_orcad: Boolean!
  has_kicad: Boolean!
  download_url_altium: String!
  download_url_eagle: String!
  download_url_orcad: String!
  download_url_kicad: String!
  footprint_image_url: String
  symbol_image_url: String
}

type PartMatch {
  reference: String
  hits: Int!
  parts: [Part!]!
  error: String
}

input PartMatchOptions {
  require_authorized_sellers: Boolean = false
  require_stock_available: Boolean = false
  filters: Map
}

input PartMatchQuery {
  mpn: String
  sku: String
  mpn_or_sku: String
  manufacturer: String
  seller: String
  start: Int! = 0
  limit: Int! = 3
  reference: String
}

type PartResult {
  _cache_id: String!
  part: Part!
  explain: String! @deprecated(reason: "always empty")
  aka_mpn: String
  description: String!
}

type PartResultSet {
  total: Int! @deprecated(reason: "use `hits` instead")
  hits: Int!
  results: [PartResult!]
  specs_view_attribute_groups: [AttributeGroup!]!
  warnings: [String!]
  spec_aggs(
    attribute_names: [String!]!
    size: Int! = 10
  ): [SpecAgg!]!
  manufacturer_agg(size: Int! = 10): [CompanyBucket!]!
  distributor_agg(size: Int! = 10): [CompanyBucket!]!
  category_agg(size: Int! = 10): [CategoryBucket!]!
  cad_agg: [CadBucket!]!
  suggested_categories: [CategoryBucket!]!
  suggested_filters: [Attribute!]!
  all_filters: [Attribute!]!
  applied_category: Category
  applied_filters: [AppliedFilter!]!
}

type PartSeller {
  _cache_id: String!
  company: Company!
  country: String
  offers: [Offer!]!
  is_authorized: Boolean!
  is_broker: Boolean!
  is_rfq: Boolean!
  ships_to_countries: [Country!]!
}

type PartSeries {
  id: ID!
  name: String!
  url: String!
}

enum PlanTier {
  FREE
  BASIC
  PRO
  ENTERPRISE
}

type PricePoint {
  _cache_id: String!
  quantity: Int!
  price: Float!
  currency: String!
  converted_price: Float!
  converted_currency: String!
  conversion_rate: Float!
}

type Query {
  attributes: [Attribute!]!
  manufacturers(ids: [String!]): [Company!]!
  sellers(ids: [String!]): [Company!]!
  categories(
    ids: [String!]
    paths: [String!]
  ): [Category!]!
  parts(
    ids: [String!]!
    country: String! = "US"
    currency: String! = "USD"
    distributorapi: Boolean
    distributorapi_timeout: String! = "3s"
    custom_pricing_credentials: [ApiCredentials!]
  ): [Part]!
  suggest(
    q: String!
    category_id: String
    part_numbers_only: Boolean
  ): [Suggestion!]!
  search(
    q: String
    country: String! = "US"
    currency: String! = "USD"
    start: Int
    limit: Int
    sort: String
    sort_dir: SortDirection
    in_stock_only: Boolean
    filters: Map
    distributorapi: Boolean
    distributorapi_timeout: String! = "3s"
    custom_pricing_credentials: [ApiCredentials!]
  ): PartResultSet!
  search_mpn(
    q: String
    country: String! = "US"
    currency: String! = "USD"
    start: Int
    limit: Int
    sort: String
    sort_dir: SortDirection
    in_stock_only: Boolean
    filters: Map
    distributorapi: Boolean
    distributorapi_timeout: String! = "3s"
    custom_pricing_credentials: [ApiCredentials!]
  ): PartResultSet!
  spelling_correction(q: String!): [SpellingCorrection!]!
  multi_match(
    queries: [PartMatchQuery!]!
    options: PartMatchOptions
    country: String! = "US"
    currency: String! = "USD"
    distributorapi: Boolean
    distributorapi_timeout: String! = "3s"
    custom_pricing_credentials: [ApiCredentials!]
  ): [PartMatch!]!
}

type ReferenceDesign {
  name: String!
  url: String!
}

enum Role {
  DISTRIBUTOR
  CADMODELS
  INTERNAL
}

enum SortDirection {
  asc
  desc
}

type Spec {
  attribute: Attribute!
  display_value: String!
}

type SpecAgg {
  attribute: Attribute!
  buckets: [SpecBucket!]!
  min: Float
  max: Float
  display_min: String
  display_max: String
}

type SpecBucket {
  display_value: String!
  float_value: Float
  count: Int
}

type SpellingCorrection {
  correction_string: String!
  hits: Int!
}

type SponsoredPart {
  _cache_id: String!
  ppid: ID! @deprecated(reason: "use part.id instead")
  source_id: ID! @deprecated(reason: "unused")
  part: Part!
  url: String!
}

type Suggestion {
  text: String!
  in_category_name: String!
  in_category_id: String!
}

scalar Time
